// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace WNG_UnitTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uIAddressandsearchbarEdit = this.UINewTabGoogleChromeWindow.UIItemGroup.UIAddressandsearchbarEdit;
            WinClient uILocalhost14889DefaulClient1 = this.UINewTabGoogleChromeWindow.UILocalhost14889DefaulClient.UILocalhost14889DefaulClient1;
            WinButton uILocalhost14889DefaulButton = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowWindow.UILocalhost14889DefaulButton;
            WinEdit uIItemEdit = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowWindow.UIItemEdit;
            WinEdit uIEnterapositivenumberEdit = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowWindow.UIEnterapositivenumberEdit;
            WinButton uILocalhost14889DefaulButton1 = this.UINewTabGoogleChromeWindow.UIChromeLegacyWindowWindow.UILocalhost14889DefaulButton1;
            #endregion

            // Click 'Address and search bar' text box
            Mouse.Click(uIAddressandsearchbarEdit, new Point(616, 11));

            // Type 'http{RShiftKey}://localhost{RShiftKey}:14880' in 'Address and search bar' text box
            Keyboard.SendKeys(uIAddressandsearchbarEdit, this.RecordedMethod1Params.UIAddressandsearchbarEditSendKeys, ModifierKeys.None);

            // Type '{Back}9/{RShiftKey}Default.aspx{Enter}' in 'Address and search bar' text box
            Keyboard.SendKeys(uIAddressandsearchbarEdit, this.RecordedMethod1Params.UIAddressandsearchbarEditSendKeys1, ModifierKeys.None);

            // Click 'localhost:14889/Default.aspx - Google Chrome' client
            Mouse.Click(uILocalhost14889DefaulClient1, new Point(971, 14));

            // Click 'localhost:14889/Default.aspx - Google Chrome' button
            Mouse.Click(uILocalhost14889DefaulButton, new Point(78, 25));

            // Click text box
            Mouse.Click(uIItemEdit, new Point(381, 27));

            // Type '1' in text box
            Keyboard.SendKeys(uIItemEdit, this.RecordedMethod1Params.UIItemEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Enter a positive number' text box
            Keyboard.SendKeys(uIEnterapositivenumberEdit, this.RecordedMethod1Params.UIEnterapositivenumberEditSendKeys, true);

            // Click 'localhost:14889/Default.aspx - Google Chrome' button
            Mouse.Click(uILocalhost14889DefaulButton1, new Point(82, 14));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UINewTabGoogleChromeWindow UINewTabGoogleChromeWindow
        {
            get
            {
                if ((this.mUINewTabGoogleChromeWindow == null))
                {
                    this.mUINewTabGoogleChromeWindow = new UINewTabGoogleChromeWindow();
                }
                return this.mUINewTabGoogleChromeWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UINewTabGoogleChromeWindow mUINewTabGoogleChromeWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'http{RShiftKey}://localhost{RShiftKey}:14880' in 'Address and search bar' text box
        /// </summary>
        public string UIAddressandsearchbarEditSendKeys = "http{RShiftKey}://localhost{RShiftKey}:14880";
        
        /// <summary>
        /// Type '{Back}9/{RShiftKey}Default.aspx{Enter}' in 'Address and search bar' text box
        /// </summary>
        public string UIAddressandsearchbarEditSendKeys1 = "{Back}9/{RShiftKey}Default.aspx{Enter}";
        
        /// <summary>
        /// Type '1' in text box
        /// </summary>
        public string UIItemEditSendKeys = "1";
        
        /// <summary>
        /// Type '********' in 'Enter a positive number' text box
        /// </summary>
        public string UIEnterapositivenumberEditSendKeys = "Krn/BG9k50j3rwjZj6jbiw==";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINewTabGoogleChromeWindow : WinWindow
    {
        
        public UINewTabGoogleChromeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "New Tab - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("New Tab - Google Chrome");
            this.WindowTitles.Add("localhost:14889/Default.aspx - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIItemGroup UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new UIItemGroup(this);
                }
                return this.mUIItemGroup;
            }
        }
        
        public UILocalhost14889DefaulClient UILocalhost14889DefaulClient
        {
            get
            {
                if ((this.mUILocalhost14889DefaulClient == null))
                {
                    this.mUILocalhost14889DefaulClient = new UILocalhost14889DefaulClient(this);
                }
                return this.mUILocalhost14889DefaulClient;
            }
        }
        
        public UIChromeLegacyWindowWindow UIChromeLegacyWindowWindow
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow == null))
                {
                    this.mUIChromeLegacyWindowWindow = new UIChromeLegacyWindowWindow(this);
                }
                return this.mUIChromeLegacyWindowWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGroup mUIItemGroup;
        
        private UILocalhost14889DefaulClient mUILocalhost14889DefaulClient;
        
        private UIChromeLegacyWindowWindow mUIChromeLegacyWindowWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemGroup : WinGroup
    {
        
        public UIItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("New Tab - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchbarEdit
        {
            get
            {
                if ((this.mUIAddressandsearchbarEdit == null))
                {
                    this.mUIAddressandsearchbarEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchbarEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search bar";
                    this.mUIAddressandsearchbarEdit.WindowTitles.Add("New Tab - Google Chrome");
                    #endregion
                }
                return this.mUIAddressandsearchbarEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchbarEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILocalhost14889DefaulClient : WinClient
    {
        
        public UILocalhost14889DefaulClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Google Chrome";
            this.WindowTitles.Add("localhost:14889/Default.aspx - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinClient UILocalhost14889DefaulClient1
        {
            get
            {
                if ((this.mUILocalhost14889DefaulClient1 == null))
                {
                    this.mUILocalhost14889DefaulClient1 = new WinClient(this);
                    #region Search Criteria
                    this.mUILocalhost14889DefaulClient1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUILocalhost14889DefaulClient1.WindowTitles.Add("localhost:14889/Default.aspx - Google Chrome");
                    #endregion
                }
                return this.mUILocalhost14889DefaulClient1;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUILocalhost14889DefaulClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIChromeLegacyWindowWindow : WinWindow
    {
        
        public UIChromeLegacyWindowWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "369826696";
            this.WindowTitles.Add("localhost:14889/Default.aspx - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinButton UILocalhost14889DefaulButton
        {
            get
            {
                if ((this.mUILocalhost14889DefaulButton == null))
                {
                    this.mUILocalhost14889DefaulButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILocalhost14889DefaulButton.SearchProperties[WinButton.PropertyNames.Name] = "Start Now";
                    this.mUILocalhost14889DefaulButton.WindowTitles.Add("localhost:14889/Default.aspx - Google Chrome");
                    #endregion
                }
                return this.mUILocalhost14889DefaulButton;
            }
        }
        
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("localhost:14889/Default.aspx - Google Chrome");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WinEdit UIEnterapositivenumberEdit
        {
            get
            {
                if ((this.mUIEnterapositivenumberEdit == null))
                {
                    this.mUIEnterapositivenumberEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIEnterapositivenumberEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Enter a positive number";
                    this.mUIEnterapositivenumberEdit.WindowTitles.Add("localhost:14889/Default.aspx - Google Chrome");
                    #endregion
                }
                return this.mUIEnterapositivenumberEdit;
            }
        }
        
        public WinButton UILocalhost14889DefaulButton1
        {
            get
            {
                if ((this.mUILocalhost14889DefaulButton1 == null))
                {
                    this.mUILocalhost14889DefaulButton1 = new WinButton(this);
                    #region Search Criteria
                    this.mUILocalhost14889DefaulButton1.SearchProperties[WinButton.PropertyNames.Name] = "Submit";
                    this.mUILocalhost14889DefaulButton1.WindowTitles.Add("localhost:14889/Default.aspx - Google Chrome");
                    #endregion
                }
                return this.mUILocalhost14889DefaulButton1;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILocalhost14889DefaulButton;
        
        private WinEdit mUIItemEdit;
        
        private WinEdit mUIEnterapositivenumberEdit;
        
        private WinButton mUILocalhost14889DefaulButton1;
        #endregion
    }
}
